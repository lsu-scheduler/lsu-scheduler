YUI.add("yuidoc-meta", function(Y) {
   Y.YUIDoc = { meta: {
    "classes": [
        "Application Course Model",
        "Application Department Model",
        "Application Instructor Model",
        "Application Schedule Model",
        "DS",
        "DS.ActiveModelAdapter",
        "DS.ActiveModelSerializer",
        "DS.Adapter",
        "DS.AdapterPopulatedRecordArray",
        "DS.BooleanTransform",
        "DS.ContainerProxy",
        "DS.DateTransform",
        "DS.DebugAdapter",
        "DS.EmbeddedRecordsMixin",
        "DS.Errors",
        "DS.FilteredRecordArray",
        "DS.FixtureAdapter",
        "DS.InvalidError",
        "DS.JSONSerializer",
        "DS.ManyArray",
        "DS.Model",
        "DS.NumberTransform",
        "DS.PromiseArray",
        "DS.PromiseObject",
        "DS.RESTAdapter",
        "DS.RESTSerializer",
        "DS.RecordArray",
        "DS.RecordArrayManager",
        "DS.RootState",
        "DS.Store",
        "DS.StringTransform",
        "DS.Transform",
        "DependentArraysObserver",
        "Ember",
        "Ember.ActionHandler",
        "Ember.Application",
        "Ember.Array",
        "Ember.ArrayController",
        "Ember.ArrayProxy",
        "Ember.AutoLocation",
        "Ember.Binding",
        "Ember.Checkbox",
        "Ember.CollectionView",
        "Ember.Comparable",
        "Ember.Component",
        "Ember.ComponentTemplateDeprecation",
        "Ember.ComputedProperty",
        "Ember.ContainerDebugAdapter",
        "Ember.ContainerView",
        "Ember.Controller",
        "Ember.ControllerContentModelAliasDeprecation",
        "Ember.ControllerMixin",
        "Ember.Copyable",
        "Ember.CoreObject",
        "Ember.CoreView",
        "Ember.DAG",
        "Ember.DataAdapter",
        "Ember.Date",
        "Ember.DefaultResolver",
        "Ember.Deferred",
        "Ember.Descriptor",
        "Ember.EachProxy",
        "Ember.Ember",
        "Ember.Enumerable",
        "Ember.EnumerableUtils",
        "Ember.Error",
        "Ember.EventDispatcher",
        "Ember.Evented",
        "Ember.FEATURES",
        "Ember.Freezable",
        "Ember.Handlebars",
        "Ember.Handlebars.Compiler",
        "Ember.Handlebars.JavaScriptCompiler",
        "Ember.Handlebars.helpers",
        "Ember.HashLocation",
        "Ember.HistoryLocation",
        "Ember.Inflector",
        "Ember.Instrumentation",
        "Ember.LinkView",
        "Ember.Location",
        "Ember.Logger",
        "Ember.Map",
        "Ember.MapWithDefault",
        "Ember.MutableArray",
        "Ember.MutableEnumerable",
        "Ember.Namespace",
        "Ember.NativeArray",
        "Ember.NoneLocation",
        "Ember.Object",
        "Ember.ObjectController",
        "Ember.ObjectProxy",
        "Ember.Observable",
        "Ember.OrderedSet",
        "Ember.PromiseProxyMixin",
        "Ember.RSVP",
        "Ember.RSVP.EventTarget",
        "Ember.RSVP.Promise",
        "Ember.ReduceComputedProperty",
        "Ember.RenderBuffer",
        "Ember.Route",
        "Ember.Router",
        "Ember.Select",
        "Ember.Sequelize Course Model",
        "Ember.Sequelize Department Model",
        "Ember.Sequelize Instructor Model",
        "Ember.Set",
        "Ember.SortableMixin",
        "Ember.State",
        "Ember.StateManager",
        "Ember.String",
        "Ember.SubArray",
        "Ember.TargetActionSupport",
        "Ember.Test",
        "Ember.Test.Adapter",
        "Ember.Test.QUnitAdapter",
        "Ember.TextArea",
        "Ember.TextField",
        "Ember.TextSupport",
        "Ember.TrackedArray",
        "Ember.View",
        "Ember.ViewTargetActionSupport",
        "Ember._HandlebarsBoundView",
        "Ember._Metamorph",
        "Ember._MetamorphView",
        "Ember._SimpleMetamorphView",
        "Ember.platform",
        "Ember.run",
        "Function",
        "LSU Scheduler API",
        "RSVP.EventTarget"
    ],
    "modules": [
        "ember",
        "ember-application",
        "ember-data",
        "ember-debug",
        "ember-handlebars",
        "ember-handlebars-compiler",
        "ember-metal",
        "ember-routing",
        "ember-routing-handlebars",
        "ember-runtime",
        "ember-testing",
        "ember-views",
        "lsu-scheduler"
    ],
    "allModules": [
        {
            "displayName": "ember",
            "name": "ember",
            "description": "Ember"
        },
        {
            "displayName": "ember-application",
            "name": "ember-application",
            "description": "Ember Application"
        },
        {
            "displayName": "ember-data",
            "name": "ember-data",
            "description": "Ember Data"
        },
        {
            "displayName": "ember-debug",
            "name": "ember-debug",
            "description": "Ember Debug"
        },
        {
            "displayName": "ember-extension-support",
            "name": "ember-extension-support",
            "description": "Ember Extension Support"
        },
        {
            "displayName": "ember-handlebars",
            "name": "ember-handlebars",
            "description": "Ember Handlebars"
        },
        {
            "displayName": "ember-handlebars-compiler",
            "name": "ember-handlebars-compiler",
            "description": "The `DataAdapter` helps a data persistence library\ninterface with tools that debug Ember such\nas the [Ember Extension](https://github.com/tildeio/ember-extension)\nfor Chrome and Firefox.\n\nThis class will be extended by a persistence library\nwhich will override some of the methods with\nlibrary-specific code.\n\nThe methods likely to be overridden are:\n\n* `getFilters`\n* `detect`\n* `columnsForType`\n* `getRecords`\n* `getRecordColumnValues`\n* `getRecordKeywords`\n* `getRecordFilterValues`\n* `getRecordColor`\n* `observeRecord`\n\nThe adapter will need to be registered\nin the application's container as `dataAdapter:main`\n\nExample:\n\n```javascript\nApplication.initializer({\n  name: \"data-adapter\",\n\n  initialize: function(container, application) {\n    application.register('data-adapter:main', DS.DataAdapter);\n  }\n});\n```"
        },
        {
            "displayName": "ember-metal",
            "name": "ember-metal",
            "description": "All Ember methods and functions are defined inside of this namespace. You\ngenerally should not add new properties to this namespace as it may be\noverwritten by future versions of Ember.\n\nYou can also use the shorthand `Em` instead of `Ember`.\n\nEmber-Runtime is a framework that provides core functions for Ember including\ncross-platform functions, support for property observing and objects. Its\nfocus is on small size and performance. You can use this in place of or\nalong-side other cross-platform libraries such as jQuery.\n\nThe core Runtime framework is based on the jQuery API with a number of\nperformance optimizations."
        },
        {
            "displayName": "ember-routing",
            "name": "ember-routing",
            "description": "Ember Routing"
        },
        {
            "displayName": "ember-routing-handlebars",
            "name": "ember-routing-handlebars",
            "description": "Ember Routing Handlebars"
        },
        {
            "displayName": "ember-runtime",
            "name": "ember-runtime",
            "description": "Ember Runtime"
        },
        {
            "displayName": "ember-testing",
            "name": "ember-testing",
            "description": "Ember Testing"
        },
        {
            "displayName": "ember-views",
            "name": "ember-views",
            "description": "Ember Views"
        },
        {
            "displayName": "lsu-scheduler",
            "name": "lsu-scheduler",
            "description": "Server script that controls the LSU Scheduler backend, including\nthe API used to communicate with front-end clients, managing data requests,\nand fetching updated information from LSU's system."
        }
    ]
} };
});